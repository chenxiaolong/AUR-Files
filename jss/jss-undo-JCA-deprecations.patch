--- a/security/jss/org/mozilla/jss/crypto/Cipher.java
+++ b/security/jss/org/mozilla/jss/crypto/Cipher.java
@@ -49,7 +49,6 @@
  * it is not necessary to call <code>update</code> if all of the data is
  * available at once.  In this case, all of the input can be processed with one
  * call to <code>doFinal</code>.
- * @deprecated Use the JCA interface instead ({@link javax.crypto.Cipher})
  */
 public abstract class Cipher {
 
--- a/security/jss/org/mozilla/jss/crypto/CryptoToken.java
+++ b/security/jss/org/mozilla/jss/crypto/CryptoToken.java
@@ -60,7 +60,6 @@
      * @param algorithm The algorithm used for the signing/verification.
      * @exception java.security.NoSuchAlgorithmException If the given
      *      algorithm is not supported by this provider.
-     * @deprecated Use the JCA interface instead ({@link java.security.Signature})
      */
     public abstract org.mozilla.jss.crypto.Signature
     getSignatureContext(SignatureAlgorithm algorithm)
@@ -73,7 +72,6 @@
      * @param algorithm The algorithm used for digesting.
      * @exception java.security.NoSuchAlgorithmException If this provider
      *  does not support the given algorithm.
-     * @deprecated Use the JCA interface instead ({@link java.security.MessageDigest})
      */
     public abstract JSSMessageDigest
     getDigestContext(DigestAlgorithm algorithm)
@@ -89,15 +87,11 @@
      * @param algorithm The algorithm used for encryption/decryption.
      * @exception java.security.NoSuchAlgorithmException If this provider
      *      does not support the given algorithm.
-     * @deprecated Use the JCA interface instead ({@link javax.crypto.Cipher})
      */
     public abstract Cipher
     getCipherContext(EncryptionAlgorithm algorithm)
         throws java.security.NoSuchAlgorithmException, TokenException;
 
-    /**
-     * @deprecated Use the JCA interface instead ({@link javax.crypto.Cipher})
-     */
     public abstract KeyWrapper
     getKeyWrapper(KeyWrapAlgorithm algorithm)
         throws java.security.NoSuchAlgorithmException, TokenException;
@@ -123,7 +117,6 @@
      * @param algorithm The algorithm that the keys will be used with.
      * @exception java.security.NoSuchAlgorithmException If this token does not
      *      support the given algorithm.
-     * @deprecated Use the JCA interface instead ({@link javax.crypto.KeyGenerator})
      */
     public abstract KeyGenerator
     getKeyGenerator(KeyGenAlgorithm algorithm)
@@ -136,7 +129,6 @@
      *      cannot be extracted from the current token.
      * @exception InvalidKeyException If the owning token cannot process
      *      the key to be cloned.
-     * @deprecated Use the JCA interface instead ({@link javax.crypto.SecretKeyFactory})
      */
     public SymmetricKey cloneKey(SymmetricKey key)
         throws SymmetricKey.NotExtractableException,
@@ -151,7 +143,6 @@
      *      DSA, EC, etc.)
      * @exception java.security.NoSuchAlgorithmException If this token does
      *      not support the given algorithm.
-     * @deprecated Use the JCA interface instead ({@link java.security.KeyPairGenerator})
      */
     public abstract KeyPairGenerator
     getKeyPairGenerator(KeyPairAlgorithm algorithm)
--- a/security/jss/org/mozilla/jss/crypto/JSSMessageDigest.java
+++ b/security/jss/org/mozilla/jss/crypto/JSSMessageDigest.java
@@ -41,7 +41,6 @@
 
 /**
  * A class for performing message digesting (hashing) and MAC operations.
- * @deprecated Use the JCA interface instead ({@link java.security.MessageDigest})
  */
 public abstract class JSSMessageDigest {
 
--- a/security/jss/org/mozilla/jss/crypto/JSSSecureRandom.java
+++ b/security/jss/org/mozilla/jss/crypto/JSSSecureRandom.java
@@ -38,7 +38,6 @@
 
 /**
  * An interface for secure random numbers.
- * @deprecated Use the JCA interface instead ({@link java.security.SecureRandom})
  */
 public interface JSSSecureRandom {
 
--- a/security/jss/org/mozilla/jss/crypto/KeyGenerator.java
+++ b/security/jss/org/mozilla/jss/crypto/KeyGenerator.java
@@ -43,7 +43,6 @@
 
 /**
  * Generates symmetric keys for encryption and decryption.
- * @deprecated Use the JCA interface instead ({@link javax.crypto.KeyGenerator})
  */
 public interface KeyGenerator {
 
--- a/security/jss/org/mozilla/jss/crypto/KeyPairGenerator.java
+++ b/security/jss/org/mozilla/jss/crypto/KeyPairGenerator.java
@@ -49,7 +49,6 @@
  * <code>keygenOnInternalToken</code> to find out if this is happening.
  *
  * @see org.mozilla.jss.crypto.CryptoToken#getKeyPairGenerator
- * @deprecated Use the JCA interface instead ({@link java.security.KeyPairGenerator})
  */
 public class KeyPairGenerator {
 
--- a/security/jss/org/mozilla/jss/crypto/KeyWrapper.java
+++ b/security/jss/org/mozilla/jss/crypto/KeyWrapper.java
@@ -40,9 +40,6 @@
 import java.security.PublicKey;
 import java.security.InvalidKeyException;
 
-/**
- * @deprecated Use the JCA interface instead ({@link javax.crypto.Cipher})
- */
 public interface KeyWrapper {
 
     public void initWrap(SymmetricKey wrappingKey,
--- a/security/jss/org/mozilla/jss/crypto/Signature.java
+++ b/security/jss/org/mozilla/jss/crypto/Signature.java
@@ -44,7 +44,6 @@
  * Instances of this class can be obtain from <code>CryptoToken</code>s.
  *
  * @see org.mozilla.jss.crypto.CryptoToken#getSignatureContext
- * @deprecated Use the JCA interface instead ({@link java.security.Signature})
  */
 public class Signature { 
 
--- a/security/jss/org/mozilla/jss/tests/SigTest.java
+++ b/security/jss/org/mozilla/jss/tests/SigTest.java
@@ -35,8 +35,6 @@
  * ***** END LICENSE BLOCK ***** */
 /* This program demonstrates how to sign data with keys from JSS
  *
- * Most of this code is deprecated look at JCASigTest.java
- *
  * java -cp ./jss4.jar org.mozilla.jss.tests.SigTest . 
  *               passwords "Internal Key Storage Token"
  *
@@ -45,8 +43,6 @@
  *  Internal Crypto Services Token
  *  Internal Key Storage Token    (keys stored in key4.db)
  *
- * @see org.mozilla.jss.tests.JCASigTest
- * @deprecated Use the JCA interface instead
  */
 package org.mozilla.jss.tests;
 
--- a/security/jss/org/mozilla/jss/tests/all.pl
+++ b/security/jss/org/mozilla/jss/tests/all.pl
@@ -541,6 +541,10 @@
 $command = "$java -cp $jss_classpath org.mozilla.jss.tests.SigTest $testdir $pwfile";
 run_test($testname, $command);
 
+$testname = "Mozilla-JSS NSS Signature ";
+$command = "$java -cp $jss_classpath org.mozilla.jss.tests.SigTest $testdir $pwfile";
+run_test($testname, $command);
+
 $testname = "Secret Decoder Ring";
 $command = "$java -cp $jss_classpath org.mozilla.jss.tests.TestSDR $testdir $pwfile";
 run_test($testname, $command);
